
x-n8n: &service-n8n
  image: docker.n8n.io/n8nio/n8n
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=database_autoengin
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=${POSTGRES_DB_AUTOENGIN}
    - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER_AUTOENGIN}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD_AUTOENGIN}
    - EXECUTIONS_MODE=queue
    - QUEUE_BULL_REDIS_HOST=cache_autoengin
    - QUEUE_HEALTH_CHECK_ACTIVE=true
    - N8N_ENCRYPTION_KEY=${ENCRYPTION_KEY_AUTOENGIN}
  links:
    - database_autoengin
    - cache_autoengin
  volumes:
    - ./volumes/autoengin:/home/node/.n8n
  depends_on:
    cache_autoengin:
      condition: service_healthy
    database_autoengin:
      condition: service_healthy

x-postgres: &service-postgres
    image: postgres:16

x-directus: &service-directus
  image: directus/directus:11.3.2

x-database: &service-database
  image: postgis/postgis:17-3.5

x-cache: &service-cache
  image: redis:6

x-healthcheck: &service-healthcheck
  interval: 10s
  timeout: 5s
  retries: 5
  start_interval: 5s
  start_period: 30s

services:
  database_benchref:
    <<: *service-database
    volumes:
      - ./volumes/data/database_benchref:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "${POSTGRES_USER_BENCHREF}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD_BENCHREF}"
      POSTGRES_DB: "${POSTGRES_DB_BENCHREF}"
    healthcheck:
      test: ["CMD", "pg_isready", "--host=localhost", "--username=${POSTGRES_USER_BENCHREF}"]
      <<: *service-healthcheck

  cache_benchref:
    <<: *service-cache
    healthcheck:
      test: ["CMD-SHELL", "[ $$(redis-cli ping) = 'PONG' ]"]
      <<: *service-healthcheck

  benchref:
    <<: *service-directus
    ports:
      - 8055:8055
    volumes:
      - ./volumes/uploads:/directus/uploads
      - ./volumes/extensions:/directus/extensions
    depends_on:
      database_benchref:
        condition: service_healthy
      cache_benchref:
        condition: service_healthy
    environment:
      SECRET: "${SECRET_BENCHREF}"

      DB_CLIENT: "${DB_CLIENT_BENCHREF}"
      DB_HOST: "${DB_HOST_BENCHREF}"
      DB_PORT: "${DB_PORT_BENCHREF}"
      DB_DATABASE: "${DB_DATABASE_BENCHREF}"
      DB_USER: "${DB_USER_BENCHREF}"
      DB_PASSWORD: "${DB_PASSWORD_BENCHREF}"

      CACHE_ENABLED: "${CACHE_ENABLED_BENCHREF}"
      CACHE_AUTO_PURGE: "${CACHE_AUTO_PURGE_BENCHREF}"
      CACHE_STORE: "${CACHE_STORE_BENCHREF}"
      REDIS: "${REDIS_BENCHREF}"

      ADMIN_EMAIL: "${ADMIN_EMAIL_BENCHREF}"
      ADMIN_PASSWORD: "${ADMIN_PASSWORD_BENCHREF}"
# -----------------------------------
  database_autoengin:
    <<: *service-postgres
    environment:
      POSTGRES_USER: "${POSTGRES_USER_AUTOENGIN}"
      POSTGRES_PASSWORD: ${POSTGRES_DB_AUTOENGIN} 
      POSTGRES_DB : "${POSTGRES_DB_AUTOENGIN}"
      POSTGRES_NON_ROOT_USER : "${POSTGRES_NON_ROOT_USER_AUTOENGIN}"
      POSTGRES_NON_ROOT_PASSWORD: "${POSTGRES_NON_ROOT_PASSWORD_AUTOENGIN}"
    volumes:
      - ./volumes/database_autoengin:/var/lib/postgresql/data
      - ./n8n-setup/init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER_AUTOENGIN} -d ${POSTGRES_DB_AUTOENGIN}']
      <<: *service-healthcheck
  
  cache_autoengin:
    <<: *service-cache
    volumes:
      - ./volumes/cache_autoengin:/data
    healthcheck:
      test: ["CMD-SHELL", "[ $$(redis-cli ping) = 'PONG' ]"]
      <<: *service-healthcheck
  
  autoengin:
    <<: *service-n8n
    ports:
      - 5678:5678
  
  autoengin-worker:
    <<: *service-n8n
    command: worker
    depends_on:
      - autoengin
# -----------------------------------
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
    volumes:
      - ./volumes/data/pgadmin:/var/lib/pgadmin
      - ./volumes/data/pgadmin/setup:/var/lib/pgadmin/setup
      - ./pgadmin-setup/servers.json:/pgadmin4/servers.json:ro

    depends_on:
      - database_benchref
      # Make sure to set this in production
      # (see https://docs.directus.io/self-hosted/config-options#general)
      # PUBLIC_URL: "${PUBLIC_URL_BENCHREF}"
